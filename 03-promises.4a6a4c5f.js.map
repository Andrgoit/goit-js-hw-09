{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAGFI,EAAQ,C,SAAEN,E,MAAUC,IAIpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,OA3CM,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,YAG5BF,KAAKI,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAMC,iBAGN,MACEC,UAAYf,MAAAgB,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAGV,IAAIC,EAASC,OAAOL,EAAMM,OAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAOH,EAAOI,OAAQC,GAAK,EAC7CzB,EAAcyB,EAAGH,GACdI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,UAEtDoB,GAAUC,OAAOJ,EAAKK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', submitBtnHandler);\n\nfunction submitBtnHandler(event) {\n  event.preventDefault();\n  // console.log('handler');\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  // console.log(delay.value, step.value, amount.value);\n\n  let result = Number(delay.value);\n\n  for (let i = 0; i < Number(amount.value); i += 1) {\n    createPromise(i, result)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    result += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n\n        resolve({ position, delay });\n      } else {\n        // Reject\n\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","button","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","result","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.4a6a4c5f.js.map"}